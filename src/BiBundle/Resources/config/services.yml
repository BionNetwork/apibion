imports:
   - { resource: "services/registration.yml" }
   - { resource: "services/upload.yml" }
   - { resource: "services/events.yml" }
   - { resource: "services/repositories.yml" }
   - { resource: "services/backend.yml" }

services:
    twig.extension.dialog:
        class: BiBundle\Twig\Extension\Dialog\Confirm
        public: false
        tags:
            - { name: twig.extension }
    bi.doctrine.entity_listener_resolver:
        class: BiBundle\Doctrine\EntityListenerResolver
        arguments: [ "@service_container" ]
    entity.serializer:
        class: BiBundle\Service\EntitySerializer
        arguments: ['@doctrine.orm.entity_manager']
    bi.dashboard.service:
        class: BiBundle\Service\DashboardService
        parent: bi.user_aware_service
    bi.card.service:
        class: BiBundle\Service\CardService
        parent: bi.user_aware_service
    bi.purchase.service:
        class: BiBundle\Service\PurchaseService
        parent: bi.user_aware_service
    bi.representation.service:
        class: BiBundle\Service\RepresentationService
        parent: bi.user_aware_service
    bi.activation.service:
        class: BiBundle\Service\ActivationService
        parent: bi.user_aware_service
    bi.resource.service:
        class: BiBundle\Service\ResourceService
        parent: bi.user_aware_service
        calls:
          - ['setServiceContainer', ['@service_container']]
    bi.dashboard_activation.service:
        class: BiBundle\Service\DashboardActivationService
        arguments: ['@repository.dashboard_activation_repository', '@security.token_storage']
    bi.argument_bond.service:
        class: BiBundle\Service\ArgumentBondService
        parent: bi.user_aware_service
    bi.card_category.service:
        class: BiBundle\Service\CardCategoryService
        arguments: ['@repository.card_category_repository']
    bi.backend.service:
        class: BiBundle\Service\BackendService
        parent: bi.user_aware_service
        calls:
          - ['setServiceContainer', ['@service_container']]
          - ['setEntityManager', ['@doctrine.orm.entity_manager']]
    user.listener:
        class: BiBundle\Entity\Listener\UserListener
        arguments: ['@service_container']
        tags:
            - { name: doctrine.orm.entity_listener }
    bi.user_aware_service:
        class: BiBundle\Service\UserAwareService
        arguments: ['@doctrine.orm.entity_manager', '@security.token_storage']
    user.service:
        class:  BiBundle\Service\User
        parent: bi.user_aware_service
        calls:
          - ['setPasswordEncoder', ['@security.password_encoder']]
    usercontact.service:
        class:	BiBundle\Service\UserContact
        arguments: ['@doctrine.orm.entity_manager']
    usercontact.listener:
        class: BiBundle\Entity\Listener\UserContactListener
        arguments: ['@service_container']
        tags:
            - { name: doctrine.orm.entity_listener }
    images.service:
        class: BiBundle\Service\Images
        parent: bi.user_aware_service
    utils.host_based_url:
        class: BiBundle\Service\Utils\HostBasedUrl
        arguments: ['@request_stack']
    gedmo.listener.translatable:
        class: Gedmo\Translatable\TranslatableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, ['@annotation_reader'] ]
            - [ setDefaultLocale, [ ru ] ]
            - [ setTranslatableLocale, [ ru ] ]
            - [ setTranslationFallback, [ true ] ]
    translatable_locale.listener:
        class: ApiBundle\EventListener\TranslatableLocaleListener
        tags:
            - { name: kernel.event_subscriber }
        arguments: ['@gedmo.listener.translatable']
    bi.activation_setting.service:
        class: BiBundle\Service\ActivationSettingService
        arguments: ['@repository.activation_setting_repository']
    bi.test_entity.factory:
        class: BiBundle\Service\TestEntityFactory
        arguments: ['@doctrine.orm.entity_manager']